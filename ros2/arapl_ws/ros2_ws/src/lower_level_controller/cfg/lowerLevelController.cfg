#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import *
#from local_planner_limits import add_generic_localplanner_params
PACKAGE = "lower_level_controller"
gen = ParameterGenerator()

# This unusual line allows to reuse existing parameter definitions
# that concern all localplanners
#add_generic_localplanner_params(gen)

# For integers and doubles:
#       Name                    Type      Reconfiguration level
#       Description
#       Default  Min  Max


test_parameters = gen.add_group("Test Parameters", type="tab")

# Control Law Tuning

test_parameters.add("leftSpeed", int_t, 0, "Left Motor RPM",    0, 0,   3000)
test_parameters.add("rightSpeed", int_t, 0, "Right Motor RPM ",   0, 0,   3000)  #-0.3

test_parameters.add("leftDirection", int_t, 0, "Left Motor Direction",    0, 0,   1)
test_parameters.add("rightDirection", int_t, 0, "Right Motor Direction ",   0, 0,   1)

test_parameters.add("brakeActivate", int_t, 0, "Activate brake",    0, 0,   1)
test_parameters.add("buzzerActivate", int_t, 0, "Activate buzzer ",   0, 0,   1)
test_parameters.add("liftActivate", int_t, 0, "Activate lift",    0, 0,   1)

exit(gen.generate(PACKAGE, "lowerLevelController", "lowerLevelController"))


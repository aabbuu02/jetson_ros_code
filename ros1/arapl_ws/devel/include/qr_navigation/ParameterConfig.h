//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the qr_navigation package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __qr_navigation__PARAMETERCONFIG_H__
#define __qr_navigation__PARAMETERCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace qr_navigation
{
  class ParameterConfigStatics;

  class ParameterConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(ParameterConfig &config, const ParameterConfig &max, const ParameterConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const ParameterConfig &config1, const ParameterConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, ParameterConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const ParameterConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, ParameterConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const ParameterConfig &config) const = 0;
      virtual void getValue(const ParameterConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T ParameterConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T ParameterConfig::* field;

      virtual void clamp(ParameterConfig &config, const ParameterConfig &max, const ParameterConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const ParameterConfig &config1, const ParameterConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, ParameterConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const ParameterConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, ParameterConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const ParameterConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const ParameterConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, ParameterConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, ParameterConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<ParameterConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(ParameterConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("forward_max_vel"==(*_i)->name){forward_max_vel = boost::any_cast<double>(val);}
        if("reverse_max_vel"==(*_i)->name){reverse_max_vel = boost::any_cast<double>(val);}
        if("homing_distance"==(*_i)->name){homing_distance = boost::any_cast<double>(val);}
        if("acc_constant"==(*_i)->name){acc_constant = boost::any_cast<double>(val);}
        if("dec_constant"==(*_i)->name){dec_constant = boost::any_cast<double>(val);}
        if("inertia_constant"==(*_i)->name){inertia_constant = boost::any_cast<double>(val);}
        if("x_position_tolerance"==(*_i)->name){x_position_tolerance = boost::any_cast<double>(val);}
        if("x_angular_tolerance"==(*_i)->name){x_angular_tolerance = boost::any_cast<double>(val);}
        if("acceleration"==(*_i)->name){acceleration = boost::any_cast<double>(val);}
        if("min_lookahead_dist"==(*_i)->name){min_lookahead_dist = boost::any_cast<double>(val);}
        if("max_lookahead"==(*_i)->name){max_lookahead = boost::any_cast<double>(val);}
        if("wheel_base"==(*_i)->name){wheel_base = boost::any_cast<double>(val);}
        if("max_angular_vel"==(*_i)->name){max_angular_vel = boost::any_cast<double>(val);}
        if("kla"==(*_i)->name){kla = boost::any_cast<double>(val);}
        if("charge_vel"==(*_i)->name){charge_vel = boost::any_cast<double>(val);}
        if("dock_vel"==(*_i)->name){dock_vel = boost::any_cast<double>(val);}
        if("inplace_max_rot_vel"==(*_i)->name){inplace_max_rot_vel = boost::any_cast<double>(val);}
        if("control_gain"==(*_i)->name){control_gain = boost::any_cast<double>(val);}
      }
    }

    double forward_max_vel;
double reverse_max_vel;
double homing_distance;
double acc_constant;
double dec_constant;
double inertia_constant;
double x_position_tolerance;
double x_angular_tolerance;
double acceleration;
double min_lookahead_dist;
double max_lookahead;
double wheel_base;
double max_angular_vel;
double kla;
double charge_vel;
double dock_vel;
double inplace_max_rot_vel;
double control_gain;

    bool state;
    std::string name;

    
}groups;



//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double forward_max_vel;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double reverse_max_vel;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double homing_distance;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double acc_constant;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double dec_constant;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double inertia_constant;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double x_position_tolerance;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double x_angular_tolerance;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double acceleration;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_lookahead_dist;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_lookahead;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double wheel_base;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_angular_vel;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double kla;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double charge_vel;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double dock_vel;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double inplace_max_rot_vel;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double control_gain;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("ParameterConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (size_t i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (size_t i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (size_t i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (size_t i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const ParameterConfig &__max__ = __getMax__();
      const ParameterConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const ParameterConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const ParameterConfig &__getDefault__();
    static const ParameterConfig &__getMax__();
    static const ParameterConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const ParameterConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void ParameterConfig::ParamDescription<std::string>::clamp(ParameterConfig &config, const ParameterConfig &max, const ParameterConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class ParameterConfigStatics
  {
    friend class ParameterConfig;

    ParameterConfigStatics()
    {
ParameterConfig::GroupDescription<ParameterConfig::DEFAULT, ParameterConfig> Default("Default", "", 0, 0, true, &ParameterConfig::groups);
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.forward_max_vel = 0.05;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.forward_max_vel = 0.8;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.forward_max_vel = 0.7;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("forward_max_vel", "double", 0, "max linear vel", "", &ParameterConfig::forward_max_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("forward_max_vel", "double", 0, "max linear vel", "", &ParameterConfig::forward_max_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.reverse_max_vel = 0.05;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.reverse_max_vel = 0.8;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.reverse_max_vel = 0.7;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("reverse_max_vel", "double", 0, "reverse_max_vel", "", &ParameterConfig::reverse_max_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("reverse_max_vel", "double", 0, "reverse_max_vel", "", &ParameterConfig::reverse_max_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.homing_distance = 0.05;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.homing_distance = 2.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.homing_distance = 0.8;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("homing_distance", "double", 0, "distance to enable extractor homing ", "", &ParameterConfig::homing_distance)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("homing_distance", "double", 0, "distance to enable extractor homing ", "", &ParameterConfig::homing_distance)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.acc_constant = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.acc_constant = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.acc_constant = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("acc_constant", "double", 0, "acceleration parameter ", "", &ParameterConfig::acc_constant)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("acc_constant", "double", 0, "acceleration parameter ", "", &ParameterConfig::acc_constant)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.dec_constant = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.dec_constant = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.dec_constant = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("dec_constant", "double", 0, "deacceleration parameters", "", &ParameterConfig::dec_constant)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("dec_constant", "double", 0, "deacceleration parameters", "", &ParameterConfig::dec_constant)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.inertia_constant = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.inertia_constant = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.inertia_constant = 0.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("inertia_constant", "double", 0, "inertia of the robot to be consider", "", &ParameterConfig::inertia_constant)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("inertia_constant", "double", 0, "inertia of the robot to be consider", "", &ParameterConfig::inertia_constant)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.x_position_tolerance = 0.005;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.x_position_tolerance = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.x_position_tolerance = 0.04;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("x_position_tolerance", "double", 0, "position accuracy to be achived near goal ", "", &ParameterConfig::x_position_tolerance)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("x_position_tolerance", "double", 0, "position accuracy to be achived near goal ", "", &ParameterConfig::x_position_tolerance)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.x_angular_tolerance = 0.005;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.x_angular_tolerance = 0.2;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.x_angular_tolerance = 0.04;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("x_angular_tolerance", "double", 0, "angular accuracy to be achived near goal ", "", &ParameterConfig::x_angular_tolerance)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("x_angular_tolerance", "double", 0, "angular accuracy to be achived near goal ", "", &ParameterConfig::x_angular_tolerance)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.acceleration = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.acceleration = 1.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.acceleration = 0.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("acceleration", "double", 0, "acceleration", "", &ParameterConfig::acceleration)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("acceleration", "double", 0, "acceleration", "", &ParameterConfig::acceleration)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_lookahead_dist = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_lookahead_dist = 1.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_lookahead_dist = 0.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("min_lookahead_dist", "double", 0, "min_lookahead_dist", "", &ParameterConfig::min_lookahead_dist)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("min_lookahead_dist", "double", 0, "min_lookahead_dist", "", &ParameterConfig::min_lookahead_dist)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_lookahead = 0.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_lookahead = 1.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_lookahead = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("max_lookahead", "double", 0, "max_lookahead", "", &ParameterConfig::max_lookahead)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("max_lookahead", "double", 0, "max_lookahead", "", &ParameterConfig::max_lookahead)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.wheel_base = 0.4;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.wheel_base = 1.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.wheel_base = 0.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("wheel_base", "double", 0, "wheel_base", "", &ParameterConfig::wheel_base)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("wheel_base", "double", 0, "wheel_base", "", &ParameterConfig::wheel_base)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_angular_vel = 0.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_angular_vel = 1.5;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_angular_vel = 0.2;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("max_angular_vel", "double", 0, ",max_angular_vel", "", &ParameterConfig::max_angular_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("max_angular_vel", "double", 0, ",max_angular_vel", "", &ParameterConfig::max_angular_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.kla = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.kla = 2.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.kla = 1.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("kla", "double", 0, "kla parameter", "", &ParameterConfig::kla)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("kla", "double", 0, "kla parameter", "", &ParameterConfig::kla)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.charge_vel = 0.05;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.charge_vel = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.charge_vel = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("charge_vel", "double", 0, "charging linear velocity", "", &ParameterConfig::charge_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("charge_vel", "double", 0, "charging linear velocity", "", &ParameterConfig::charge_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.dock_vel = 0.05;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.dock_vel = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.dock_vel = 0.1;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("dock_vel", "double", 0, "docking linear velocity", "", &ParameterConfig::dock_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("dock_vel", "double", 0, "docking linear velocity", "", &ParameterConfig::dock_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.inplace_max_rot_vel = 0.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.inplace_max_rot_vel = 2.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.inplace_max_rot_vel = 0.2;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("inplace_max_rot_vel", "double", 0, "inplace max rot velocity", "", &ParameterConfig::inplace_max_rot_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("inplace_max_rot_vel", "double", 0, "inplace max rot velocity", "", &ParameterConfig::inplace_max_rot_vel)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.control_gain = 0.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.control_gain = 1.0;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.control_gain = 0.7;
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("control_gain", "double", 0, "control gain", "", &ParameterConfig::control_gain)));
//#line 292 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ParameterConfig::AbstractParamDescriptionConstPtr(new ParameterConfig::ParamDescription<double>("control_gain", "double", 0, "control gain", "", &ParameterConfig::control_gain)));
//#line 247 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 247 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(ParameterConfig::AbstractGroupDescriptionConstPtr(new ParameterConfig::GroupDescription<ParameterConfig::DEFAULT, ParameterConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<ParameterConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<ParameterConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<ParameterConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    ParameterConfig __max__;
    ParameterConfig __min__;
    ParameterConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const ParameterConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static ParameterConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &ParameterConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const ParameterConfig &ParameterConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const ParameterConfig &ParameterConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const ParameterConfig &ParameterConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<ParameterConfig::AbstractParamDescriptionConstPtr> &ParameterConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<ParameterConfig::AbstractGroupDescriptionConstPtr> &ParameterConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const ParameterConfigStatics *ParameterConfig::__get_statics__()
  {
    const static ParameterConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = ParameterConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __PARAMETERRECONFIGURATOR_H__

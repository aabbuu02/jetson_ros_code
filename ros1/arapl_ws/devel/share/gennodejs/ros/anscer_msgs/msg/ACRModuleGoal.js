// Auto-generated. Do not edit!

// (in-package anscer_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let ACRControl = require('./ACRControl.js');

//-----------------------------------------------------------

class ACRModuleGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.control_input = null;
    }
    else {
      if (initObj.hasOwnProperty('control_input')) {
        this.control_input = initObj.control_input
      }
      else {
        this.control_input = new ACRControl();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ACRModuleGoal
    // Serialize message field [control_input]
    bufferOffset = ACRControl.serialize(obj.control_input, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ACRModuleGoal
    let len;
    let data = new ACRModuleGoal(null);
    // Deserialize message field [control_input]
    data.control_input = ACRControl.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 22;
  }

  static datatype() {
    // Returns string type for a message object
    return 'anscer_msgs/ACRModuleGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'dff17f295ad0f39ca1837d79706b9a4c';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #goal definition
    ACRControl control_input
    
    
    ================================================================================
    MSG: anscer_msgs/ACRControl
    #mission status
    int32 PICKUP =0
    int32 DROPOFF =1
    
    int16 acr_shelf
    int16 target_shelf
    int16 acr_action
    int64 bar_code_number
    int64 whole_bin_number
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ACRModuleGoal(null);
    if (msg.control_input !== undefined) {
      resolved.control_input = ACRControl.Resolve(msg.control_input)
    }
    else {
      resolved.control_input = new ACRControl()
    }

    return resolved;
    }
};

module.exports = ACRModuleGoal;
